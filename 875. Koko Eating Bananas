class Solution {
public:
    bool solve(vector<int> &piles,int mid,int h){
         int count= 0;
            for (int i = 0; i < piles.size(); i ++){
                count+=ceil(1.0 * piles[i] / mid);
                if(count>h){
                    return false;
                }
            }
         return true;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        int n=piles.size();
        int low=1,high=*max_element(piles.begin(),piles.end());
        int ans=0;
        while(low<=high){
           int mid=low+(high-low)/2;
           if(solve(piles,mid,h)){
              ans=mid;
              high=mid-1;
           }else{
              low=mid+1;
           } 
        }
        return ans;
    }
};

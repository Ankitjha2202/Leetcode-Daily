class Solution {
public:
     TreeNode* convert(TreeNode *root, vector<int> &ans, int low, int high) {
        if(low <= high) {
            int mid=low + (high-low)/2;
            root=new TreeNode(ans[mid]);
            root->left=convert(root->left, ans, low, mid-1);
            root->right=convert(root->right, ans, mid+1, high);
        }
        return root;
    }
    TreeNode* sortedListToBST(ListNode* head) {
         if(head==NULL){
             return NULL;
         }
         vector<int> ans;
         TreeNode* temp=NULL;
         while(head!=NULL){
            ans.push_back(head->val); 
            head=head->next;
         }
         return convert(temp,ans,0,ans.size()-1);
    }
};

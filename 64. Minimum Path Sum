class Solution {
public:
    int solve(vector<vector<int>>&ans,vector<vector<int>> &grid,int i,int j,int n,int m){
        if(i==n-1 && j==m-1){
            return grid[i][j];
        }
        if(i>=n || j>=m){
            return INT_MAX;
        }
        if(ans[i][j]!=-1){
            return ans[i][j];
        }
        int ans1=solve(ans,grid,i,j+1,n,m);
        int ans2=solve(ans,grid,i+1,j,n,m);
        ans[i][j]=grid[i][j]+min(ans1,ans2);
        return ans[i][j];
    }
    int minPathSum(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>> ans(n,vector<int>(m,-1));
        return solve(ans,grid,0,0,n,m);
    }
};

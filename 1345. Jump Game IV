class Solution {
public:
    int minJumps(vector<int>& arr) {
        int n=arr.size();
        unordered_map<int,vector<int>> mp;
        for(int i=0;i<n;i++){
            mp[arr[i]].push_back(i);
        }
        queue<int> q;
        q.push(0);
        int ans=0;
        vector<bool> vis(n,false);
        vis[0]=true;
        while(!q.empty()){
            int sz=q.size();
            while(sz--){
                int top=q.front();
                q.pop();
                if(top==n-1){
                    return ans;
                }
                vector<int> nxt=mp[arr[top]];
                nxt.push_back(top-1);
                nxt.push_back(top+1);
                for(auto &it:nxt){
                    if(it>=0 && it<n && !vis[it]){
                        vis[it]=true;
                        q.push(it);
                    }
                }
                mp[arr[top]].clear();
            }
            ans++;
        }
        return -1;
    }
};

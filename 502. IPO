int n = profits.size() ;
        
       
        vector<pair< int , int >>v ;
        
        for( int i = 0 ; i < n ; i++ )
        {
            v.push_back({ capital[i] , profits[i] }) ;
        }
        
        sort( v.begin() , v.end() ) ;
        int i = 0 ;
        
        priority_queue<int>pq ;
        
        while( i < n && v[i].first <= w )
        {
            pq.push(v[i].second) ;
            i++ ;
        }
        
        
        while(k--  && !pq.empty())
        {
            int f = pq.top() ;
            pq.pop() ;
            
            w += f ;
            while( i < n && v[i].first <= w )
        {
            pq.push(v[i].second) ;
            i++ ;
        }
            
        } 
        
        return w ;
